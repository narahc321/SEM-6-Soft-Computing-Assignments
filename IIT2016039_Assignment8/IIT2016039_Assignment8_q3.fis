{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "A = [(2, 0.5), (3, 1)]\n",
    "B = [(3, 0.5), (4, 0.75)]\n",
    "def get(a, b):\n",
    "    val = a[0] + b[0]\n",
    "    prob = min(a[1], b[1])\n",
    "    \n",
    "#     2*(x^2) -3 \n",
    "#     val = 2*a[0]*a[0] - 3\n",
    "#     prob = a[1]\n",
    "    return val, prob\n",
    "\n",
    "dt = {}  \n",
    "for i in range(len(A)):\n",
    "    for j in range(len(B)):\n",
    "        val, prob = get(A[i], B[j])\n",
    "        if val in dt:\n",
    "            if dt[val] < prob:\n",
    "                dt[val] = prob\n",
    "        else:\n",
    "            dt[val] = prob\n",
    "for x in dt:\n",
    "    print(x,dt[x])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 0.5\n",
      "6 0.5\n",
      "7 0.75\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
